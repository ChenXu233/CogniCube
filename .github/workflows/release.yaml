name: Flutter Multi-Platform Release

on:
  push:
    tags: ["v*"]
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.29.2" # 更新至最新稳定版
  BUILD_DIR: "build"
  ANDROID_KEYSTORE_PATH: "frontend/android/app/keystore.jks"

jobs:
  bump-version:
    name: Auto-Increment Version
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许推送标签
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Generate New Tag
        run: |
          # 处理首个版本和标签冲突
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          VERSION=${LATEST_TAG#v}

          NEW_VERSION=$(echo $VERSION | awk -F. '{
            if (NF < 3) { 
              for (i=1; i<=3; i++) if ($i == "") $i = 0;
              $3++;
            } else if (NF == 3) { $3++ }
            print $1"."$2"."$3
          }')

          NEW_TAG="v$NEW_VERSION"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

          # 清理已存在的标签 
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1 || \
             git ls-remote --tags origin "$NEW_TAG" | grep -q "$NEW_TAG"; then
            git tag -d "$NEW_TAG" || true
            git push origin ":refs/tags/$NEW_TAG" || true
          fi

          git tag $NEW_TAG
          git push origin $NEW_TAG --force
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build All Platforms
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      JAVA_VERSION: "17" # 适配 Flutter 3.27+

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev clang cmake libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio  # 跨平台编译依赖

      - name: Configure Android Signing
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          STORE_PASS: ${{ secrets.ANDROID_STORE_PASSWORD }}
          KEY_PASS: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        run: |
          # 解码并配置密钥 
          echo "$KEYSTORE_BASE64" | base64 -di > $ANDROID_KEYSTORE_PATH
          chmod 600 $ANDROID_KEYSTORE_PATH

          echo "storePassword=$STORE_PASS" > frontend/android/keystore.properties
          echo "keyPassword=$KEY_PASS" >> frontend/android/keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> frontend/android/keystore.properties
          echo "storeFile=../app/keystore.jks" >> frontend/android/keystore.properties

      - name: Build Artifacts
        run: |

          cd frontend

          flutter pub get

          # Android (优化性能)
          flutter build apk --release --flavor with_impeller
          flutter build apk --release --flavor without_impeller

          # Web (优化性能) 
          flutter build web --release

          # Linux (生成AppImage)
          flutter build linux --release
          chmod +x build/linux/x64/release/bundle/*

          # Windows (生成安装程序)
          flutter build windows --release
          # cd build/windows/runner/Release
          # makensis ../installer.nsis  # 需要提前准备NSIS脚本

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: release-artifacts
          path: |
            build/app/outputs/apk/**/*.apk
            build/web/**
            build/linux/x64/release/bundle/**
            build/windows/runner/Release/**

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许创建release

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: release-artifacts
          path: release-artifacts

      - name: Generate Release Notes
        run: |
          echo "## Changelog" > release-notes.md
          git log --pretty=format:"- %s (%h)" ${{ needs.bump-version.outputs.old_tag }}..${{ env.NEW_TAG }} >> release-notes.md

      - name: Publish Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ env.NEW_TAG }}
          body_path: release-notes.md
          files: |
            release-artifacts/**/*.apk
            release-artifacts/**/*.zip
            release-artifacts/**/*.AppImage
            release-artifacts/**/*.exe
          draft: false
          prerelease: ${{ contains(github.ref, 'beta') }}
