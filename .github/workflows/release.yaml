name: Flutter Multi-Platform Release

on:
  push:
    tags: ["v*"] # 仅在标签推送时触发
    branches: [main]
  workflow_dispatch:

env:
  FLUTTER_VERSION: "3.29.2" # 更新至最新稳定版
  BUILD_DIR: "build"
  ANDROID_KEYSTORE_PATH: "frontend/android/app/keystore.jks"

jobs:
  bump-version:
    name: Auto-Generate Version Tag
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许删除/推送标签
    outputs:
      new_tag: ${{ steps.tag-generation.outputs.NEW_TAG }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # 需要完整历史记录检查标签

      - name: 获取 Flutter 项目版本号
        id: get-version
        run: |
          cd frontend  # 进入包含 pubspec.yaml 的目录
          VERSION=$(grep 'version:' pubspec.yaml | awk '{print $2}' | tr -d '\n')
          echo "PROJECT_VERSION=$VERSION" >> $GITHUB_OUTPUT

      - name: 生成并推送 Git 标签
        id: tag-generation
        run: |
          # 组合标签名称 (例如 v1.2.3)
          NEW_TAG="v${{ steps.get-version.outputs.PROJECT_VERSION }}"
          echo "生成标签: $NEW_TAG"

          # 清理旧标签（如果存在）
          if git rev-parse "$NEW_TAG" >/dev/null 2>&1 || \
             git ls-remote --tags origin "$NEW_TAG" | grep -q "$NEW_TAG"; then
            echo "发现已存在标签 $NEW_TAG，执行清理..."
            git tag -d "$NEW_TAG" || true
            git push origin ":refs/tags/$NEW_TAG" || true
          fi

          # 创建新标签
          git tag $NEW_TAG
          git push origin $NEW_TAG
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build-android-with-impeller:
    name: Build Android (With Impeller)
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      JAVA_VERSION: "17"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev clang cmake libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Configure Android Signing
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          STORE_PASS: ${{ secrets.ANDROID_STORE_PASSWORD }}
          KEY_PASS: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -di > $ANDROID_KEYSTORE_PATH
          chmod 600 $ANDROID_KEYSTORE_PATH

          echo "storePassword=$STORE_PASS" > frontend/android/keystore.properties
          echo "keyPassword=$KEY_PASS" >> frontend/android/keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> frontend/android/keystore.properties
          echo "storeFile=../app/keystore.jks" >> frontend/android/keystore.properties

      - name: Build APK with Impeller
        run: |
          cd frontend
          flutter pub get
          flutter build apk --release --flavor with_impeller

      - name: Upload Impeller Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-with-impeller
          path: frontend/build/app/outputs/flutter-apk/app-with_impeller-release.apk

  build-android-without-impeller:
    name: Build Android (Without Impeller)
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    env:
      JAVA_VERSION: "17"
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev clang cmake libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio

      - name: Configure Android Signing
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
          STORE_PASS: ${{ secrets.ANDROID_STORE_PASSWORD }}
          KEY_PASS: ${{ secrets.ANDROID_KEY_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -di > $ANDROID_KEYSTORE_PATH
          chmod 600 $ANDROID_KEYSTORE_PATH

          echo "storePassword=$STORE_PASS" > frontend/android/keystore.properties
          echo "keyPassword=$KEY_PASS" >> frontend/android/keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> frontend/android/keystore.properties
          echo "storeFile=../app/keystore.jks" >> frontend/android/keystore.properties

      - name: Build APK without Impeller
        run: |
          cd frontend
          flutter pub get
          flutter build apk --release --flavor without_impeller

      - name: Upload Non-Impeller Artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-without-impeller
          path: frontend/build/app/outputs/flutter-apk/app-without_impeller-release.apk

  build-web:
    name: Build Web
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Build Web
        run: |
          cd frontend
          flutter pub get
          flutter build web --release

      - name: Upload Web Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: web-artifacts
          path: frontend/build/web/**

  build-linux:
    name: Build Linux
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Install Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev clang cmake libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev libgstreamer-plugins-bad1.0-dev gstreamer1.0-plugins-base gstreamer1.0-plugins-good gstreamer1.0-plugins-bad gstreamer1.0-plugins-ugly gstreamer1.0-libav gstreamer1.0-tools gstreamer1.0-x gstreamer1.0-alsa gstreamer1.0-gl gstreamer1.0-gtk3 gstreamer1.0-qt5 gstreamer1.0-pulseaudio  # 跨平台编译依赖

      - name: Build Linux
        run: |
          cd frontend
          flutter pub get
          flutter build linux --release
          chmod +x build/linux/x64/release/bundle/*

      - name: Upload Linux Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: linux-artifacts
          path: frontend/build/linux/x64/release/bundle/**

  build-windows:
    name: Build Windows
    needs: bump-version
    runs-on: windows-latest
    timeout-minutes: 30
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true

      - name: Build Windows
        run: |
          cd frontend
          flutter pub get
          flutter build windows --release

      - name: Upload Windows Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: frontend/build/windows/x64/runner/Release/**

  release:
    name: Create GitHub Release
    needs:
      [
        build-android-with-impeller,
        build-android-without-impeller,
        build-web,
        build-linux,
        build-windows,
      ]
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-with-impeller
          path: release-artifacts/android/with_impeller

      - name: Download Android Artifacts
        uses: actions/download-artifact@v4
        with:
          name: android-without-impeller
          path: release-artifacts/android/without_impeller

      - name: Download Web Artifacts
        uses: actions/download-artifact@v4
        with:
          name: web-artifacts
          path: release-artifacts/web

      - name: Download Linux Artifacts
        uses: actions/download-artifact@v4
        with:
          name: linux-artifacts
          path: release-artifacts/linux

      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: release-artifacts/windows

      - name: Publish Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            release-artifacts/**/*.apk
            release-artifacts/**/*.zip
            release-artifacts/**/*.AppImage
            release-artifacts/**/*.exe
