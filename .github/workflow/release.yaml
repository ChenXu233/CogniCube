name: Flutter Multi-Platform Release

on:
  push:
    tags:
      - "v*"
    branches:
      - main
  workflow_dispatch: # 允许手动触发

env:
  FLUTTER_VERSION: "3.29.2" # 使用长期支持版本
  BUILD_DIR: "build"
  ANDROID_KEYSTORE_PATH: "android/app/keystore.jks"

jobs:
  bump-version:
    name: Auto-Increment Version
    runs-on: ubuntu-latest
    permissions: # 添加权限
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git # 新增身份配置
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"

      - name: Bump version
        run: |
          # 修复变量名拼写错误
          LATEST_TAG=$(git describe --tags --abbrev=0 2>/dev/null || echo "v0.1.0")
          VERSION=${LATEST_TAG#v}

          # 生成新版本号
          NEW_VERSION=$(echo $VERSION | awk -F. '{
            if(NF==3) {$NF++} 
            else if(NF<3) {for(i=NF+1;i<=3;i++) $i=0; $3++}
            print $1"."$2"."$3
          }')

          NEW_TAG="v$NEW_VERSION"
          echo "NEW_TAG=$NEW_TAG" >> $GITHUB_ENV

          # 创建并推送标签
          git tag $NEW_TAG
          git push origin $NEW_TAG
        env: # 添加认证信息
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  build:
    name: Build All Platforms
    needs: bump-version
    runs-on: ubuntu-latest
    timeout-minutes: 30 # 防止卡死
    env:
      JAVA_VERSION: "17" # 适配Flutter 3.22+要求

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: "zulu"
          java-version: ${{ env.JAVA_VERSION }}

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: stable
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true # 启用缓存加速

      - name: Install Linux Dependencies
        run: |
          sudo apt update -y
          sudo apt install -y ninja-build libgtk-3-dev

      - name: Decode Keystore
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}
        run: |
          echo "$KEYSTORE_BASE64" | base64 -di > ${{ env.ANDROID_KEYSTORE_PATH }}
          chmod 600 ${{ env.ANDROID_KEYSTORE_PATH }}

      - name: Configure Android Signing
        run: |
          echo "storePassword=${{ secrets.ANDROID_STORE_PASSWORD }}" > android/key.properties
          echo "keyPassword=${{ secrets.ANDROID_KEY_PASSWORD }}" >> android/key.properties
          echo "keyAlias=${{ secrets.ANDROID_KEY_ALIAS }}" >> android/key.properties
          echo "storeFile=../app/keystore.jks" >> android/key.properties

      - name: Build Artifacts
        run: |
          flutter pub get
          # Android构建
          flutter build apk --release --split-per-abi  # 生成多架构APK
          # Web构建
          flutter build web --release --web-renderer canvaskit
          # Linux构建
          flutter build linux --release 
          # Windows构建
          flutter build windows --release

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: multi-platform-builds
          path: |
            build/app/outputs/apk/release/*.apk
            build/web/**
            build/linux/x64/release/bundle/**
            build/windows/runner/Release/**

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write # 允许创建release

    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          name: multi-platform-builds
          path: release-artifacts

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.NEW_TAG }}
          files: |
            release-artifacts/**/*.apk
            release-artifacts/**/*.zip
            release-artifacts/**/*.exe
          body: |
            ## Changelog
            Auto-generated build artifacts for:
            - Android (ARM/x86_64)
            - Web
            - Linux
            - Windows
